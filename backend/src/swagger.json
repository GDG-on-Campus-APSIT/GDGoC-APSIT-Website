{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "GDG OC APSIT API",
    "description": "API documentation for notifications management, logging, achievements, and user management"
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "paths": {
    "/notifications": {
      "get": {
        "summary": "Get all notifications",
        "tags": ["Notifications"],
        "responses": {
          "200": {
            "description": "List of all notifications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new notification",
        "tags": ["Notifications"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notification created successfully",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      }
    },
    "/notifications/{id}": {
      "get": {
        "summary": "Get a notification by ID",
        "tags": ["Notifications"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the notification to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification data",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "put": {
        "summary": "Update a notification by ID",
        "tags": ["Notifications"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the notification to update"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification updated successfully"
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a notification by ID",
        "tags": ["Notifications"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the notification to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully"
          },
          "404": {
            "description": "Notification not found"
          }
        }
      }
    },
    "/logs": {
      "get": {
        "summary": "Get all log entries",
        "tags": ["Logs"],
        "responses": {
          "200": {
            "description": "A list of logs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Log"
              }
            }
          },
          "500": {
            "description": "Error fetching logs"
          }
        }
      },
      "delete": {
        "summary": "Delete all log entries",
        "tags": ["Logs"],
        "responses": {
          "200": {
            "description": "All logs deleted successfully"
          },
          "500": {
            "description": "Error deleting logs"
          }
        }
      }
    },
    "/achievements": {
      "get": {
        "summary": "Get all achievements",
        "tags": ["Achievements"],
        "responses": {
          "200": {
            "description": "List of all achievements",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Achievement"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new achievement",
        "tags": ["Achievements"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Achievement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Achievement created successfully",
            "schema": {
              "$ref": "#/definitions/Achievement"
            }
          }
        }
      }
    },
    "/achievements/{id}": {
      "get": {
        "summary": "Get an achievement by ID",
        "tags": ["Achievements"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the achievement to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Achievement data",
            "schema": {
              "$ref": "#/definitions/Achievement"
            }
          },
          "404": {
            "description": "Achievement not found"
          }
        }
      },
      "put": {
        "summary": "Update an achievement by ID",
        "tags": ["Achievements"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the achievement to update"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Achievement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Achievement updated successfully"
          },
          "404": {
            "description": "Achievement not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an achievement by ID",
        "tags": ["Achievements"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the achievement to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Achievement deleted successfully"
          },
          "404": {
            "description": "Achievement not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "List of all users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to update"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Notification": {
      "type": "object",
      "properties": {
        "notification_id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["Info", "Warning", "Alert"]
        },
        "message": {
          "type": "string"
        },
        "sent_to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["notification_id", "type", "message", "sent_to"]
    },
    "Log": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "responseTime": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["method", "url", "status", "responseTime"]
    },
    "Achievement": {
      "type": "object",
      "properties": {
        "achievement_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "badge_level": {
          "type": "integer"
        },
        "issued_to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["achievement_id", "name", "description", "badge_level", "issued_to"]
    },
    "User": {
      "type": "object",
      "properties": {
        "firebase_uid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone_number": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "college_joining_year": {
          "type": "integer"
        },
        "moodle_id": {
          "type": "string"
        },
        "id_card_image_url": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["Super Admin", "Admin", "Member", "Guest"]
        },
        "status": {
          "type": "string",
          "enum": ["active", "inactive"]
        },
        "profile_picture": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["firebase_uid", "name", "email", "phone_number", "branch", "college_joining_year", "id_card_image_url", "role", "password"]
    }
  }
}
